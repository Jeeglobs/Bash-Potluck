{
  "version": 3,
  "sources": ["../../node_modules/react-use-localstorage/src/index.ts"],
  "sourcesContent": ["import { Dispatch, useCallback, useEffect, useState } from 'react';\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string = ''\n): [string, Dispatch<string>] {\n  const [value, setValue] = useState(\n    () => window.localStorage.getItem(key) || initialValue\n  );\n\n  const setItem = (newValue: string) => {\n    setValue(newValue);\n    window.localStorage.setItem(key, newValue);\n  };\n\n  useEffect(() => {\n    const newValue = window.localStorage.getItem(key);\n    if (value !== newValue) {\n      setValue(newValue || initialValue);\n    }\n  });\n\n  const handleStorage = useCallback(\n    (event: StorageEvent) => {\n      if (event.key === key && event.newValue !== value) {\n        setValue(event.newValue || initialValue);\n      }\n    },\n    [value]\n  );\n\n  useEffect(() => {\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [handleStorage]);\n\n  return [value, setItem];\n}\n"],
  "mappings": ";;;;;;;SAEwBA,gBACtBC,KACAC,cAAAA;MAAAA,iBAAAA,QAAAA;AAAAA,mBAAuB;;sBAEGC,uBACxB,WAAA;AAAA,WAAMC,OAAOC,aAAaC,QAAQL,GAA5B,KAAoCC;EAA1C,CADgC,GAA3BK,QAAAA,UAAAA,CAAAA,GAAOC,WAAAA,UAAAA,CAAAA;AAId,MAAMC,UAAU,SAAVA,SAAWC,UAAD;AACdF,aAASE,QAAD;AACRN,WAAOC,aAAaI,QAAQR,KAAKS,QAAjC;EACD;AAEDC,8BAAU,WAAA;AACR,QAAMD,WAAWN,OAAOC,aAAaC,QAAQL,GAA5B;AACjB,QAAIM,UAAUG,UAAU;AACtBF,eAASE,YAAYR,YAAb;IACT;EACF,CALQ;AAOT,MAAMU,oBAAgBC,0BACpB,SAACC,OAAD;AACE,QAAIA,MAAMb,QAAQA,OAAOa,MAAMJ,aAAaH,OAAO;AACjDC,eAASM,MAAMJ,YAAYR,YAAnB;IACT;EACF,GACD,CAACK,KAAD,CAN+B;AASjCI,8BAAU,WAAA;AACRP,WAAOW,iBAAiB,WAAWH,aAAnC;AACA,WAAO,WAAA;AAAA,aAAMR,OAAOY,oBAAoB,WAAWJ,aAAtC;IAAN;EACR,GAAE,CAACA,aAAD,CAHM;AAKT,SAAO,CAACL,OAAOE,OAAR;AACR;;",
  "names": ["useLocalStorage", "key", "initialValue", "useState", "window", "localStorage", "getItem", "value", "setValue", "setItem", "newValue", "useEffect", "handleStorage", "useCallback", "event", "addEventListener", "removeEventListener"]
}
